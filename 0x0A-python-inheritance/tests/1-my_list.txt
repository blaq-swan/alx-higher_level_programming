docstest for `1-my_list`
========================
 
The module contains a class MyList and a func print_sorted(self)
-----------------------------------------------------------------

Import module:
	>>> print_sorted = __import__('1-my_list').MyList.print_sorted

Test empty function
::
	>>> print_sorted()
	Traceback (most recent call last):
	TypeError: MyList.print_sorted() missing 1 required positional argument: 'self'

Test for Extra arg
::
	>>> print_sorted([2, 1], 1)
	Traceback (most recent call last):
	TypeError: MyList.print_sorted() takes 1 positional argument but 2 were given

Test for non list
::
	>>> print_sorted("Hello")
	['H', 'e', 'l', 'l', 'o']

Test for empty list
::
	>>> print_sorted([])
	[]

Test with a matrix
::
	>>> print_sorted([[]])
	[[]]

Test with a non integers
::
	>>> print_sorted(["1", '2'])
	["1", "2"]

Test with sorted postive integers
::
	>>> print_sorted([1, 2, 3])
	[1, 2, 3]

Test for unsorted intgers
::
	>>> print_sorted([3, 1, 2])
	[1, 2, 3]

Test for sorted negative integers
::
	>>> print_sorted([-3, -2, -1])
	[-3, -2, -1]

Test for unsorted negative integers'
::
	>>> print_sorted([-3, -1, -2])
	[-3, -2, -1]

Test for module docstring
::
	>>> m_doc = __import__('1-my_list').__doc__
	>>> len(m_doc) > 1
	True

Test for class docstring
::
	>>> c_doc = __import__('1-my_list').MyList.__doc__
	>>> len(c_doc) > 1
	True

Test for function docstring
::
	>>> f_doc = __import__('1-my_list').MyList.print_sorted.__doc__
	>>> len(f_doc) > 1
	True
