docstest for `1-my_list`
========================
 
The module contains a class MyList and a func print_sorted(self)
-----------------------------------------------------------------

Import module:
	>>> MyList = __import__('1-my_list').MyList

Test empty function
::

::
	>>> my_list = MyList()
	>>> my_list.print_sorted()
	[]

Test for Extra arg
::
	>>> my_list.print_sorted([2, 1])
	Traceback (most recent call last):
	TypeError: MyList.print_sorted() takes 1 positional argument but 2 were given

Test for non list
::
	>>> my_list.print_sorted("Hello")
	Traceback (most recent call last):
	TypeError: MyList.print_sorted() takes 1 positional argument but 2 were given

Test for empty list
::
	>>> my_list.print_sorted([])
	Traceback (most recent call last):
	TypeError: MyList.print_sorted() takes 1 positional argument but 2 were given



Test for module docstring
::
	>>> m_doc = __import__('1-my_list').__doc__
	>>> len(m_doc) > 1
	True

Test for class docstring
::
	>>> c_doc = __import__('1-my_list').MyList.__doc__
	>>> len(c_doc) > 1
	True

Test for function docstring
::
	>>> f_doc = __import__('1-my_list').MyList.print_sorted.__doc__
	>>> len(f_doc) > 1
	True

Test with already sorted positive
::
	>>> my_list.sort()
	>>> my_list.print_sorted()
	[]


Test with negative
::
	>>> my_list[:] = [-1, -2, -3]
	>>> my_list.print_sorted()
	[-3, -2, -1]

Test with positive
::
	>>> my_list[:] = [3, 1, 2]
	>>> my_list.print_sorted()
	[1, 2, 3]

